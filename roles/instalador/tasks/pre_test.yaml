- name: Versiones actuales
  debug:
    msg: "{{ ansible_local.currentVersions }}"
    verbosity: 3
  when: ansible_local.currentVersions is defined

- name: Versiones instaladas
  debug:
    msg: "{{ ansible_local.installedVersions }}"
    verbosity: 3
  when: ansible_local.installedVersions is defined

# Si no hay facts previos: DECISION: INSTALO
- when: ansible_local.installedVersions is not defined or ansible_local.currentVersions is not defined
  set_fact: 
    hay_instalar: True

# Si hay facts previos: MIRO
- #when: 
  #  - hay_instalar is undefined
    #- ansible_local.installedVersions is defined 
    #- ansible_local.currentVersions is defined
  block:
    - name: Mirar si hubo cambios
      set_fact: 
        hay_cambios: False
    
    - name: Comprobar que las versiones instaladas siguen intactas
      set_fact: 
        hay_cambios: True
      loop: 
        - "{{ansible_local.installedVersions.VERSIONS | dict2items | zip (ansible_local.currentVersions.VERSIONS| dict2items) | list}}"
      when: item.0  != item.1
      ignore_errors: True
      
    # Si no ha habido cambios, NO INSTALO
    - name: Comprobar que las versiones instaladas me valen
      set_fact: 
        hay_instalar: False
      when: not hay_cambios 
      
    - when: hay_cambios 
      block:
      
      - name: Mirar si tengo que instalar
        set_fact: 
          hay_instalar: False
      
      # Si alguna version que tengo instalada realmente (current) no cumple con los requerimientos solicitados, instalo
          
      - name: Comprobar si tengo todo instalado correctamente
        set_fact: 
            hay_instalar: True
        when:
          - not (ansible_local.currentVersions.VERSIONS[item.0.key] is version( item.1.version, item.1.comparator ))
        #debug: 
        #  msg: |
        #    {{ item }}
        #    {{ ansible_local.currentVersions.VERSIONS[item.0.key] }}
        #    {{ item.1.version }}
        #    {{ item.1.comparator }}
        loop: >-
          {{ instalador | dict2items 
              | list 
              | subelements ('value.version.requirements') 
          }}
    # ansible_local.currentVersions
    # instalador
#                
