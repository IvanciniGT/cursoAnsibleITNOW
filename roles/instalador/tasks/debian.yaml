
- name: Comprobar si tengo apt
  shell: apt --version
  failed_when: False
  changed_when: False
  register: apt_disponible
  
- name: Trabajando en ubuntu/debian o derivados
  when: apt_disponible.rc == 0
  tags:
    - instalar
  become: True    
  block:
      
    - name: Instalar Clave
      apt_key:
        url: "{{ item.value.install.repo.key }}"
        state: present
      when: 
        - item.value.install is defined 
        - item.value.install is not none
        - item.value.install.repo is defined 
        - item.value.install.repo is not none
        - item.value.install.repo.key is defined 
        - item.value.install.repo.key is not none
        - filtrar_instalacion | length()  == 0 or filtrar_instalacion[item.key] is defined
    
      loop: "{{ instalador | dict2items }}"
                              # item.key < git
                              # item.value < diccionario de valores dentro del key
      
    - name: Generar URL repo
      shell: 'echo "{{ item.value.install.repo.url }}"'
      when: 
        - item.value.install is defined 
        - item.value.install is not none
        - item.value.install.repo is defined 
        - item.value.install.repo is not none
        - item.value.install.repo.url is defined 
        - item.value.install.repo.url is not none
        - filtrar_instalacion | length()  == 0 or filtrar_instalacion[item.key] is defined
      register: repository_url   # Tendremos un dato que se llama results 
      changed_when: False
      loop: "{{ instalador | dict2items }}"
    
    - name: Mostrar URLS
      debug: 
        msg: "{{ repository_url }}"
        verbosity: 3
        
    - name: Instalar Repo
      apt_repository:
        repo: "{{ item.stdout | trim }}"
        state: present
        filename: "{{ item.item.key }}"
      when: 
        - item.skipped is not defined or not item.skipped
        - filtrar_instalacion | length()  == 0 or filtrar_instalacion[item.key] is defined
    
      loop: "{{ repository_url.results }}"

    - name: Instalar Herramientas
      apt:
        name: "{{ item.key }}"
        # Sintaxis IF en JINJA
        # {% if CONDICION %}VALOR SI SE CUMPLE{% else %}VALOR SI NO SE CUMPLE{% endif %}
        state: >-
          {% if item.value.install is defined 
                and item.value.install is not none 
                and item.value.install.upgrade | default(False) 
          %}latest{% 
            else 
          %}present{%
            endif %}
        update_cache: True
      loop: "{{ instalador | dict2items }}"
      when:
        - filtrar_instalacion | length()  == 0 or filtrar_instalacion[item.key] is defined

